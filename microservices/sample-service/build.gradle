apply plugin: 'spring-boot'
apply from: "$rootProject.projectDir/boot.gradle" 

springBoot { mainClass = 'com.scaffold.sample.app.SampleApplication' }

dependencies {
	
	compile("org.springframework.boot:spring-boot-starter-web") {
		exclude module: 'spring-boot-starter-tomcat'
	}
	compile("org.springframework.boot:spring-boot-starter-undertow")
	compile "org.springframework.cloud:spring-cloud-netflix:${cloud_netflix_version}"
	compile("org.springframework.cloud:spring-cloud-starter-eureka:${cloud_netflix_version}")
	compile ("org.springframework.cloud:spring-cloud-starter-hystrix:${cloud_netflix_version}")
	compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${cloud_netflix_version}")
	compile("org.springframework.cloud:spring-cloud-netflix-hystrix-amqp:${cloud_netflix_version}")
	
	compile project(':commons:rest')
	
	compile group: 'commons-io', name: 'commons-io', version: commons_io_version
	compile group: 'javax.inject', name: 'javax.inject', version: javax_inject_version
	compile group: 'javax.transaction', name: 'javax.transaction-api'
	compile group: 'joda-time', name: 'joda-time', version: joda_time_version
	compile group: 'joda-time', name: 'joda-time-hibernate', version: joda_time_hibernate_version
	compile group: 'org.hibernate', name: 'hibernate-core', version: hibernate_entitymanager_version
	compile group: 'org.hibernate', name: 'hibernate-envers'
	compile group: 'org.hibernate', name: 'hibernate-validator'
	compile group: 'org.jadira.usertype', name: 'usertype.core', version: usertype_core_version
	compile group: 'org.springframework.boot', name: 'spring-boot-actuator'
	compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'
	compile group: 'org.springframework.boot', name: 'spring-boot-loader-tools'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-logging'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
	compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web') { exclude module: 'spring-boot-starter-tomcat' }
	compile group: 'org.springframework.cloud', name: 'spring-cloud-spring-service-connector'
	compile group: 'org.springframework.cloud', name: 'spring-cloud-localconfig-connector'
	compile(group: 'org.springframework', name: 'spring-context-support') { exclude(module: 'quartz') }
	compile group: 'org.springframework.security', name: 'spring-security-config', version: spring_security_version
	compile group: 'org.springframework.security', name: 'spring-security-data', version: spring_security_version
	compile group: 'org.springframework.security', name: 'spring-security-web', version: spring_security_version
	compile group: 'org.springframework.security', name: 'spring-security-messaging', version: spring_security_version
	compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: spring_security_oauth2_version
	compile(group: 'io.springfox', name: 'springfox-swagger2', version: springfox_version){ exclude module: 'mapstruct' }

	compile group: 'org.postgresql', name: 'postgresql', version: postgresql_version
	compile group: 'com.h2database', name: 'h2'
	compile group: 'fr.ippon.spark.metrics', name: 'metrics-spark-reporter', version: metrics_spark_reporter_version
	compile group: 'org.mapstruct', name: 'mapstruct-jdk8', version: mapstruct_version
}
